{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = [\"on:click\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_fiqure = _resolveComponent(\"fiqure\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", null, \"영화정보\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.data, (movie, i) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: i\n    }, [_createVNode(_component_fiqure, null, {\n      default: _withCtx(() => [...(_cache[0] || (_cache[0] = [_createElementVNode(\"img\", {\n        src: \"/assets/1.jpg\",\n        alt: \"\"\n      }, null, -1 /* HOISTED */)]))]),\n      _: 1 /* STABLE */\n    }), _createElementVNode(\"h3\", {\n      class: \"bg-yellow\",\n      style: _normalizeStyle(_ctx.textRed)\n    }, _toDisplayString(movie.title), 5 /* TEXT, STYLE */), _createElementVNode(\"p\", null, \"개봉 : \" + _toDisplayString(movie.year), 1 /* TEXT */), _createElementVNode(\"p\", null, \"장르 : \" + _toDisplayString(movie.category), 1 /* TEXT */), _createElementVNode(\"button\", {\n      \"on:click\": $event => $options.increseLike(i)\n    }, \"좋아요\", 40 /* PROPS, NEED_HYDRATION */, _hoisted_1), _cache[1] || (_cache[1] = _createTextVNode()), _createElementVNode(\"span\", null, _toDisplayString(movie.like), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 반복문 (item : 현재 반복중인 데이터, index : 현재항목의 순서)\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.foods, (item, i) => {\n    return _openBlock(), _createElementBlock(\"p\", {\n      key: i\n    }, _toDisplayString(item), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createElementVNode","_renderList","$data","data","movie","i","key","_createVNode","_component_fiqure","default","_withCtx","_cache","src","alt","_","class","style","_normalizeStyle","_ctx","textRed","title","_toDisplayString","year","category","$event","$options","increseLike","_hoisted_1","_createTextVNode","like","_createCommentVNode","foods","item"],"sources":["C:\\vue project\\movie-info\\src\\App.vue"],"sourcesContent":["<template>\n  <h1>영화정보</h1>\n  <div v-for=\"(movie, i) in data\" :key=\"i\">\n    <fiqure>\n      <img src=\"/assets/1.jpg\" alt=\"\">\n    </fiqure>\n    <h3 class=\"bg-yellow\" :style=\"textRed\">{{movie.title}}</h3>\n    <p>개봉 : {{movie.year}}</p>\n    <p>장르 : {{movie.category}}</p>\n    <button @:click=\"increseLike(i)\">좋아요</button> <span>{{movie.like}}</span>\n  </div>\n  <!-- 반복문 (item : 현재 반복중인 데이터, index : 현재항목의 순서)-->\n  <p v-for=\"(item, i) in foods\" :key=\"i\">{{ item }}</p>\n</template>\n\n<script>\n  export default{\n    name: 'App',\n    // 문자의 표시될 변수 표기기\n    data(){\n      return {\n\n        data : [\n          {\n            title: \"노량\",\n            year: 2023,\n            category: \"액션, 드라마\",\n            textRed: \"color: red\",\n            like : 0,\n          },\n          {\n            title: \"아쿠아맨과 로스트 킹덤\",\n            year: 2023,\n            category: \"액션, 판타지, 어드벤처\",\n            like : 0,\n          },\n          {\n            title: \"쉰들러 리스트\",\n            year: 1998,\n            category: \"홀로코스트\",\n            like : 0,\n          }\n        ]\n      }\n    },\n    methods: {\n      increseLike(i){\n        this.data[i].like += 1;\n      }\n    },\n  }\n</script>\n\n<style>\n.bg-yellow{\n  background: gold;\n  padding: 10px;\n}\n</style>\n"],"mappings":";mBAAA;;;uBAAAA,mBAAA,CAAAC,SAAA,S,0BACEC,mBAAA,CAAa,YAAT,MAAI,uB,kBACRF,mBAAA,CAQMC,SAAA,QAVRE,WAAA,CAE4BC,KAAA,CAAAC,IAAI,EAFhC,CAEeC,KAAK,EAAEC,CAAC;yBAArBP,mBAAA,CAQM;MAR2BQ,GAAG,EAAED;IAAC,IACrCE,YAAA,CAESC,iBAAA;MALbC,OAAA,EAAAC,QAAA,CAIM,MAAgC,KAAAC,MAAA,QAAAA,MAAA,OAAhCX,mBAAA,CAAgC;QAA3BY,GAAG,EAAC,eAAe;QAACC,GAAG,EAAC;;MAJnCC,CAAA;QAMId,mBAAA,CAA2D;MAAvDe,KAAK,EAAC,WAAW;MAAEC,KAAK,EANhCC,eAAA,CAMkCC,IAAA,CAAAC,OAAO;wBAAIf,KAAK,CAACgB,KAAK,yBACpDpB,mBAAA,CAA0B,WAAvB,OAAK,GAAAqB,gBAAA,CAAEjB,KAAK,CAACkB,IAAI,kBACpBtB,mBAAA,CAA8B,WAA3B,OAAK,GAAAqB,gBAAA,CAAEjB,KAAK,CAACmB,QAAQ,kBACxBvB,mBAAA,CAA6C;MAApC,UAAM,EAAAwB,MAAA,IAAEC,QAAA,CAAAC,WAAW,CAACrB,CAAC;OAAG,KAAG,kCATxCsB,UAAA,G,0BAAAC,gBAAA,KASkD5B,mBAAA,CAA2B,cAAAqB,gBAAA,CAAnBjB,KAAK,CAACyB,IAAI,iB;kCAElEC,mBAAA,+CAAkD,G,kBAClDhC,mBAAA,CAAqDC,SAAA,QAZvDE,WAAA,CAYyBiB,IAAA,CAAAa,KAAK,EAZ9B,CAYaC,IAAI,EAAE3B,CAAC;yBAAlBP,mBAAA,CAAqD;MAAtBQ,GAAG,EAAED;IAAC,GAAAgB,gBAAA,CAAKW,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}