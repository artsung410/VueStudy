{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", null, \"영화정보\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.data, (movie, i) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: i\n    }, [_createElementVNode(\"h3\", {\n      class: \"bg-yellow\",\n      style: _normalizeStyle(_ctx.textRed)\n    }, _toDisplayString(movie.title), 5 /* TEXT, STYLE */), _createElementVNode(\"p\", null, \"개봉 : \" + _toDisplayString(movie.year), 1 /* TEXT */), _createElementVNode(\"p\", null, \"장르 : \" + _toDisplayString(movie.category), 1 /* TEXT */), _createElementVNode(\"button\", {\n      \"on:click\": _cache[0] || (_cache[0] = $event => $data.like++)\n    }, \"좋아요\", 32 /* NEED_HYDRATION */), _cache[1] || (_cache[1] = _createTextVNode()), _createElementVNode(\"span\", null, _toDisplayString($data.like), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 반복문 (item : 현재 반복중인 데이터, index : 현재항목의 순서)\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.foods, (item, i) => {\n    return _openBlock(), _createElementBlock(\"p\", {\n      key: i\n    }, _toDisplayString(item), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createElementVNode","_renderList","$data","data","movie","i","key","class","style","_normalizeStyle","_ctx","textRed","title","_toDisplayString","year","category","_cache","$event","like","_createTextVNode","_createCommentVNode","foods","item"],"sources":["C:\\vue project\\movie-info\\src\\App.vue"],"sourcesContent":["<template>\n  <h1>영화정보</h1>\n  <div v-for=\"(movie, i) in data\" :key=\"i\">\n    <h3 class=\"bg-yellow\" :style=\"textRed\">{{movie.title}}</h3>\n    <p>개봉 : {{movie.year}}</p>\n    <p>장르 : {{movie.category}}</p>\n    <button @:click=\"like++\">좋아요</button> <span>{{like}}</span>\n  </div>\n  <!-- 반복문 (item : 현재 반복중인 데이터, index : 현재항목의 순서)-->\n  <p v-for=\"(item, i) in foods\" :key=\"i\">{{ item }}</p>\n</template>\n\n<script>\n  export default{\n    name: 'App',\n    // 문자의 표시될 변수 표기기\n    data(){\n      return {\n        like : 0,\n        data : [\n          {\n            title: \"노량\",\n            year: 2023,\n            category: \"액션, 드라마\",\n            textRed: \"color: red\",\n          },\n          {\n            title: \"아쿠아맨과 로스트 킹덤\",\n            year: 2023,\n            category: \"액션, 판타지, 어드벤처\",\n          },\n          {\n            title: \"쉰들러 리스트\",\n            year: 1998,\n            category: \"홀로코스트\",\n          }\n        ]\n      }\n    },\n    methods: {\n      increseLike(){\n        like += 1;\n      }\n    },\n  }\n</script>\n\n<style>\n.bg-yellow{\n  background: gold;\n  padding: 10px;\n}\n</style>\n"],"mappings":";;uBAAAA,mBAAA,CAAAC,SAAA,S,0BACEC,mBAAA,CAAa,YAAT,MAAI,uB,kBACRF,mBAAA,CAKMC,SAAA,QAPRE,WAAA,CAE4BC,KAAA,CAAAC,IAAI,EAFhC,CAEeC,KAAK,EAAEC,CAAC;yBAArBP,mBAAA,CAKM;MAL2BQ,GAAG,EAAED;IAAC,IACrCL,mBAAA,CAA2D;MAAvDO,KAAK,EAAC,WAAW;MAAEC,KAAK,EAHhCC,eAAA,CAGkCC,IAAA,CAAAC,OAAO;wBAAIP,KAAK,CAACQ,KAAK,yBACpDZ,mBAAA,CAA0B,WAAvB,OAAK,GAAAa,gBAAA,CAAET,KAAK,CAACU,IAAI,kBACpBd,mBAAA,CAA8B,WAA3B,OAAK,GAAAa,gBAAA,CAAET,KAAK,CAACW,QAAQ,kBACxBf,mBAAA,CAAqC;MAA5B,UAAM,EAAAgB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEf,KAAA,CAAAgB,IAAI;OAAI,KAAG,4B,0BANhCC,gBAAA,KAM0CnB,mBAAA,CAAqB,cAAAa,gBAAA,CAAbX,KAAA,CAAAgB,IAAI,iB;kCAEpDE,mBAAA,+CAAkD,G,kBAClDtB,mBAAA,CAAqDC,SAAA,QATvDE,WAAA,CASyBS,IAAA,CAAAW,KAAK,EAT9B,CASaC,IAAI,EAAEjB,CAAC;yBAAlBP,mBAAA,CAAqD;MAAtBQ,GAAG,EAAED;IAAC,GAAAQ,gBAAA,CAAKS,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}